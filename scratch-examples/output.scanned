type Set type Any definition (in) { } operator (not in) { Any not in Set } ### Compiles let x : Any let S : Set x in S ### Compiles let x : Any let S : Set x not in S definition (empty set) { let A be any Set if { exists any x : Any st x in A } then { A is not empty set } else { A is empty set } } ### Doesn't Compile let A : Set let x : Any x in S A is empty set ### Compiles let A : Set A is empty set definition (order, (<)) { let S be any Set let x in S let y in S either { x < y x = y y < x } } definition (ordered) { let A be any Set if { } } 